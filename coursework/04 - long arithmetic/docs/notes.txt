
ИДЕЯ.
Шаблонный класс ultralong большого беззнакового целого.
Параметр шаблона - битовая ширина ultralong
Значение хранится в std::bitset.
Для кодирования цифр используется неупакованный двоично-десятичный код BCD8421. 

РЕАЛИЗОВАННЫЙ ИНТЕРФЕЙС.
1. Конструкторы создают экземпляры класса из:
   1.1. Строк различных символов.
   1.2. std::vector<интегральный тип>.
   1.3. std::initializer_list<интегральный тип>.
2. Операции:
   2.1. Присваивания.
   2.2. Унарное сложение - метод класса.
   2.3. Бинарное сложение - свободная функция.
   2.4. Унарное умножение - метод класса.
   2.5. Бинарное умножение - свободная функция.
   2.4. Вывод в std::cout.
3. Конвертирование значения большого беззнакового целого в строки различных символов.

ОШИБКИ.
1. "The bit field width must be a multiple of 8." - ошибка времени компиляции.
2. std::invalid_argument - "Incorrect format for writing a negative number."
3. std::invalid_argument - "A character cannot be converted to a digit."
4. std::out_of_range - "The type does not have the ability to accommodate the number."
5. std::overflow_error - "The calculation result is too large for the target type."


Двоичная арифметика в дополнительном коде
При решении во избежание типовых ошибок рекомендуется придерживаться следующей последовательности действий.
Допустим, заданы два десятичных числа, тогда необходимо:
1. Перевести десятичные числа в двоичный код.
2. Уравнять форматы полученных двоичных чисел.
3. Если знаки чисел одинаковые, добавить по одному резервному нулю слева от 
   каждого числа во избежание переполнения.
4. Получить дополнительные коды чисел.
5. Приписать знаковые разряды.
6. Сложить полученные коды по правилам двоичного сложения.
7. Перенос из знакового разряда, если есть, то отбросить.
8. Результат получен в дополнительном коде, поэтому для проверки
   значащих разрядов отрицательного числа необходимо сделать вычисления:
   сначала вычислить обратный код по формуле ОК=ДК-1, после чего произвести инверсию полученного числа.